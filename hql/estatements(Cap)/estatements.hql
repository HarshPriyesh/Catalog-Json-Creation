create database if not exists schema_estatements_al00967;

DROP TABLE IF EXISTS schema_estatements_al00967.statement_groups;
CREATE EXTERNAL TABLE schema_estatements_al00967.statement_groups(
EXTERNAL_SYSTEM_ID VARCHAR(10),
EXTERNAL_PRODUCT_HELD_ID_TEXT VARCHAR(30),
STATEMENT_ISSUE_DATE DATE,
ACCOUNT_NAME VARCHAR(41),
BRANCH_NAME VARCHAR(41),
SUB_BRANCH_CODE VARCHAR(3),
PRODUCT_NAME VARCHAR(60),
STATEMENT_OPTION_CODE VARCHAR(4),
OVERDRAFT_REVIEW_DATE DATE,
CHARGES_NOTIFICATION_START_DAT DATE,
CHARGES_APPLICATION_DATE DATE,
CHARGES_NOTIFICATION_END_DATE DATE,
PRIMARY_CURRENCY_CODE VARCHAR(4),
ALT_CURRENCY_CODE VARCHAR(4),
ADDRESS_LINE1 VARCHAR(40),
ADDRESS_LINE2 VARCHAR(40),
ADDRESS_LINE3 VARCHAR(40),
ADDRESS_LINE4 VARCHAR(40),
ADDRESS_LINE5 VARCHAR(40),
ADDRESS_LINE6 VARCHAR(40),
ADDRESS_LINE7 VARCHAR(40),
STATEMENT_NUMBER VARCHAR(4),
BIC VARCHAR(15),
IBAN VARCHAR(30),
STMT_SUMM_IND VARCHAR(1),
OPENING_BAL_DATE DATE,
CLOSING_BAL_DATE DATE,
PRODUCT_NUMBER VARCHAR(4),
TARIFF_NUMBER VARCHAR(3),
CONTACT_ADDR_1 VARCHAR(25),
CONTACT_ADDR_2 VARCHAR(25),
CONTACT_ADDR_3 VARCHAR(25),
CONTACT_TELE VARCHAR(15 ),
PRODUCT_TYPE VARCHAR(3),
CR_PYMT_STATUS_IND VARCHAR(1),
LENDING_REG_STATUS VARCHAR(1),
STATEMENT_TYPE VARCHAR(3),
SUMMARY_START_DATE DATE,
SUMMARY_END_DATE DATE,
PRODUCT_SUMMARY_IND VARCHAR(1),
ANNUAL_SEQ_NBR VARCHAR(10))
PARTITIONED BY (
`ingestion_year` int,
`ingestion_month` int,
`ingestion_day` int)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
STORED AS ORC
LOCATION 'gs://${hivevar:stagingBucket}/BASE2_AL00242/statement_groups/';


DROP TABLE IF EXISTS schema_estatements_al00967.statement_group_amounts ;
CREATE EXTERNAL TABLE schema_estatements_al00967.statement_group_amounts (
EXTERNAL_SYSTEM_ID VARCHAR(10),
EXTERNAL_PRODUCT_HELD_ID_TEXT VARCHAR(30),
STATEMENT_ISSUE_DATE DATE,
STTMNT_AMOUNT_SEQUNC_NO VARCHAR(10),
STTMNT_GROUP_AMOUNT_TYPE_CD VARCHAR(4),
CURRENCY_CODE VARCHAR(4),
STATEMENT_GROUP_AMOUNT Decimal(18,3),
STATEMENT_AMOUNT_DESCRIPTION VARCHAR(60))
PARTITIONED BY (
`ingestion_year` int,
`ingestion_month` int,
`ingestion_day` int)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
STORED AS ORC
LOCATION 'gs://${hivevar:stagingBucket}/BASE2_AL00242/statement_group_amounts /';


DROP TABLE IF EXISTS schema_estatements_al00967.statement_sheet;
CREATE EXTERNAL TABLE schema_estatements_al00967.statement_sheet(
EXTERNAL_SYSTEM_ID VARCHAR(10),
EXTERNAL_PRODUCT_HELD_ID_TEXT VARCHAR(30),
STATEMENT_ISSUE_DATE DATE,
STATEMENT_SHEET_SEQ_NUMBER VARCHAR(10),
STATEMENT_SHEET_NUMBER VARCHAR(10),
CHARGES_NOTIFICATION_INDICATOR VARCHAR(1),
BROUGHT_FORWARD_BALANCE_DATE DATE,
LATEST_FULL_ENTRY_DATE DATE,
STATEMENT_NUMBER VARCHAR(4))
PARTITIONED BY (
`ingestion_year` int,
`ingestion_month` int,
`ingestion_day` int)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
STORED AS ORC
LOCATION 'gs://${hivevar:stagingBucket}/BASE2_AL00242/statement_sheet/';


DROP TABLE IF EXISTS schema_estatements_al00967.statement_sheet_amounts;
CREATE EXTERNAL TABLE schema_estatements_al00967.statement_sheet_amounts(
EXTERNAL_SYSTEM_ID VARCHAR(10),
EXTERNAL_PRODUCT_HELD_ID_TEXT VARCHAR(30),
STATEMENT_ISSUE_DATE DATE,
STATEMENT_SHEET_SEQ_NUMBER VARCHAR(10),
STTMNT_SHEET_AMOUNT_TYPE_CD VARCHAR(4),
CURRENCY_CODE VARCHAR(4),
STATEMENT_SHEET_AMOUNT Decimal(18,3))
PARTITIONED BY (
`ingestion_year` int,
`ingestion_month` int,
`ingestion_day` int)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
STORED AS ORC
LOCATION 'gs://${hivevar:stagingBucket}/BASE2_AL00242/statement_sheet_amounts/';


DROP TABLE IF EXISTS schema_estatements_al00967.statement_entries ;
CREATE EXTERNAL TABLE schema_estatements_al00967.statement_entries (
EXTERNAL_SYSTEM_ID VARCHAR(10),
EXTERNAL_PRODUCT_HELD_ID_TEXT VARCHAR(30),
STATEMENT_ISSUE_DATE DATE,
STATEMENT_SHEET_SEQ_NUMBER VARCHAR(10),
STTMNT_ENTRY_SEQUNC_NO VARCHAR(10),
STATEMENT_ENTRY_CURRENCY_CODE VARCHAR(4),
STATEMENT_ENTRY_DATE DATE,
STATEMENT_TRANSACTION_TYPE_CD VARCHAR(4),
BATCH_NUMBER VARCHAR(4),
STATEMENT_MNEMONIC_CODE VARCHAR(4),
PROCESS_CODE VARCHAR(5),
STTMNT_ENTRY_REFRNC_NO VARCHAR(18),
PRIMARY_BALANCE Decimal(18,3),
PRIMARY_AMOUNT Decimal(18,3),
ALT_CURRENCY_BALANCE Decimal(18,3),
ALT_CURRENCY_AMOUNT Decimal(18,3),
ADDITIONAL_AMOUNTS VARCHAR(1),
STTMNT_ENTRY_DSCRPN_LINE_TX_1 VARCHAR(60),
STTMNT_ENTRY_DSCRPN_LINE_TX_2 VARCHAR(60),
STTMNT_ENTRY_DSCRPN_LINE_TX_3 VARCHAR(60),
STTMNT_ENTRY_DSCRPN_LINE_TX_4 VARCHAR(60),
STTMNT_ENTRY_DSCRPN_LINE_TX_5 VARCHAR(60),
ADDITIONAL_DESCRIPTIONS VARCHAR(1))
PARTITIONED BY (
`ingestion_year` int,
`ingestion_month` int,
`ingestion_day` int)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
STORED AS ORC
LOCATION 'gs://${hivevar:stagingBucket}/BASE2_AL00242/statement_entries /';


DROP TABLE IF EXISTS schema_estatements_al00967.cap_ancillary_data;
CREATE EXTERNAL TABLE schema_estatements_al00967.cap_ancillary_data(
EXTERNAL_SYSTEM_ID VARCHAR(10),
EXTERNAL_PRODUCT_HELD_ID_TEXT VARCHAR(30),
STATEMENT_ISSUE_DATE DATE,
STATEMENT_SHEET_SEQ_NUMBER VARCHAR(10),
ADDTNL_SERVIC_CHARGE_AMOUNT Decimal(18,3),
ATHRD_DEBIT_INTRST_AMOUNT Decimal(18,3),
ATHRD_DEBIT_INTRST_RT VARCHAR(11),
AUTOMATED_DEBIT_ENTRY_COUNT VARCHAR(10),
CAP_ADVANCE_NOTICE_INDICATOR VARCHAR(1),
CAP_ASSOCIATION_CODE VARCHAR(5),
CAP_CHARGES_ADVISED_DATE DATE,
CAP_MNTHLY_EXTREM_BALANC_CD VARCHAR(4),
CAP_NON_STNDRD_UNCLRD_CYCLE_CD VARCHAR(4),
CAP_SERVICE_CHARGE_CODE VARCHAR(5),
CAP_SET_NUMBER VARCHAR(3),
CASHPOINT_ENTRY_COUNT VARCHAR(10),
CATEGORY_CODE VARCHAR(10),
CHARGEABLE_TURNOVER_AMOUNT Decimal(18,3),
CLASSIFICATION_CODE VARCHAR(4),
CREDIT_ENTRY_COUNT VARCHAR(10),
CREDIT_INTEREST_AMOUNT Decimal(18,3),
CREDIT_INTEREST_RATE VARCHAR(11),
CREDIT_PRODUCT_CODE VARCHAR(15),
DEBIT_ENTRY_COUNT VARCHAR(10),
DEBIT_PRODUCT_CODE VARCHAR(15),
FREE_CREDIT_ENTRY_COUNT VARCHAR(10),
FREE_DEBIT_ENTRY_COUNT VARCHAR(10),
INTEREST_ACCOUNT_NUMBER VARCHAR(08),
INTEREST_SET_OFF_INDICATOR VARCHAR(1),
LAST_CREDIT_DATE DATE,
LAST_DEBIT_DATE DATE,
LAST_STATEMENT_DATE DATE,
MANAGEMENT_INFORMATION_CODE VARCHAR(5),
MINIMUM_LEDGER_BALANCE Decimal(18,3),
PASSBOOK_NUMBER VARCHAR(8),
PRIMARY_DIARY_FREQUENCY_CODE VARCHAR(6),
PRIMARY_DIARY_MONTH_DAY VARCHAR(2),
RISK_CODE VARCHAR(4),
SECONDARY_DIARY_FREQUENCY_CODE VARCHAR(6),
SECONDARY_DIARY_MONTH_DAY VARCHAR(2),
STANDING_ORDER_ENTRY_COUNT VARCHAR(10),
STATEMENT_CONTROL_CODE VARCHAR(4),
UNTHRD_BRRWNG_INTRST_AMOUNT Decimal(18,3),
UNTHRD_BRRWNG_INTRST_RT VARCHAR(11),
VISA_ENTRY_COUNT VARCHAR(10))
PARTITIONED BY (
`ingestion_year` int,
`ingestion_month` int,
`ingestion_day` int)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
STORED AS ORC
LOCATION 'gs://${hivevar:stagingBucket}/BASE2_AL00242/cap_ancillary_data/';


DROP TABLE IF EXISTS schema_estatements_al00967.entry_to_issue_date;
CREATE EXTERNAL TABLE schema_estatements_al00967.entry_to_issue_date(
EXTERNAL_SYSTEM_ID VARCHAR(10),
EXTERNAL_PRODUCT_HELD_ID_TEXT VARCHAR(30),
STATEMENT_ISSUE_DATE DATE,
BEGIN_ENTRY_DATE DATE,
END_ENTRY_DATE DATE,
ENTRY_COUNT VARCHAR(10))
PARTITIONED BY (
`ingestion_year` int,
`ingestion_month` int,
`ingestion_day` int)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '|'
LINES TERMINATED BY '\n'
STORED AS ORC
LOCATION 'gs://${hivevar:stagingBucket}/BASE2_AL00242/entry_to_issue_date/';